{"version":3,"sources":["component/RealTime.tsx","component/Sub.tsx","component/Category.tsx","component/DeleteButton.tsx","component/Favorite.tsx","stores/memoList.ts","component/Memo.tsx","stores/index.ts","hooks/useSortedMemoList.ts","component/Main.tsx","component/AddButton.tsx","component/AddMemoForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RealTime","useState","Date","time","setTime","useEffect","id","window","setInterval","clearInterval","className","getFullYear","getMonth","getDate","getHours","Minutes","getMinutes","Sub","Category","props","category","console","log","DeleteButton","Delete","onClick","FavoriteButton","Favorite","isFavorite","storage","localStorage","getItem","initialState","JSON","parse","key","val","match","updateStorage","state","setItem","stringify","slice","createSlice","name","reducers","addMemo","action","memoList","payload","deleteMemo","filter","item","favoriteMemo","favorite","targetMemoIndex","findIndex","memo","actions","Memo","text","created_dt","dispatch","useDispatch","date","reducer","combineReducers","MemoListReducer","store","configureStore","useSelector","rawUseSelector","useSortedMemoList","MemoSort","sort","a","b","FavoriteMemoList","NoFavoriteMemoList","Main","MemoList","map","AddButton","Add","AddMemoForm","Close","useForm","register","handleSubmit","watch","formState","errors","onSubmit","data","chars","rand_str","i","charAt","Math","floor","random","length","getId","required","value","App","modalIsOpen","setIsOpen","isOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80bb8245.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\n\n\nfunction RealTime() {\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    const id = window.setInterval(() => {\n      setTime(new Date())\n    },1000)\n    return () => {\n      window.clearInterval(id)\n    }\n  }, [setTime])\n  const getMinutes = (time:Date) =>{\n    const Minutes = time.getMinutes()\n    if(Minutes < 10){\n      return '0' + Minutes;\n    }else{\n      return Minutes;\n    }\n  }\n\n  return (\n    <div className='RealTime'>\n      {`${time.getFullYear()} / ${time.getMonth()+1} / ${time.getDate()} / ${time.getHours()} : ${getMinutes(time)}`}\n    </div>\n    );\n}\n\nexport default RealTime;","import React from 'react';\nimport RealTime from './RealTime';\n\n\nfunction Sub() {\n  return (\n    <div>\n      ====================\n      <RealTime />\n    </div>\n    );\n}\n\nexport default Sub;\n","import React from 'react';\n\n\n\nfunction Category (props:{category:string}) {\n  const category = props.category\n  console.log(props.category)\n  return (\n  <div className='Category'>\n    {category}\n  </div>\n    );\n}\n\nexport default Category;\n","import React from 'react';\n\n\n\nfunction  DeleteButton (props:{Delete:React.MouseEventHandler<HTMLButtonElement>}) {\n  const Delete = props.Delete\n  return (\n    <button className='DeleteButton' onClick={Delete}>\n      √ó\n    </button>\n  );\n}\n\nexport default DeleteButton;\n","import React from 'react';\n\n\n\nfunction FavoriteButton (props:{Favorite:React.MouseEventHandler<HTMLButtonElement>,isFavorite:boolean}) {\n  const Favorite = props.Favorite\n  const isFavorite = props.isFavorite\n  return (\n    <button className='FavoriteButton' onClick={Favorite}> \n      {isFavorite?'üíó':'üíô'}\n    </button>\n  );\n}\n\nexport default FavoriteButton;\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { memo } from \"react\";\nimport  { MemoType } from '../type/Memo'\n\n\n\n// State„ÅÆÂàùÊúüÁä∂ÊÖã\nconst storage = localStorage.getItem('memoList');\nconst initialState:MemoType[] = storage === null ? []:JSON.parse(storage,reviver);\nfunction reviver(key:string, val:any){\n  if (typeof(val) == \"string\" &&\n      val.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/)){\n      return new Date(Date.parse(val));\n  }\n  return val;\n}\n\nfunction updateStorage(state:MemoType[]){\nlocalStorage.setItem('memoList', JSON.stringify(state))\n}\n\nconst add: CaseReducer<MemoType[], PayloadAction<MemoType>> = (state, action) => {\n  console.log(state,action)\n  const memoList = [...state,action.payload]\n  updateStorage(memoList);\n  return memoList;\n}\n\nconst remove: CaseReducer<MemoType[], PayloadAction<string>> = (state, action) => {\n  console.log(state,action)\n  const id = action.payload\n  const memoList = state.filter(function( item ){\n    console.log(item, id)\n    return item.id !== id\n  });\n  updateStorage(memoList);\n  return memoList;\n}\n\nconst favorite: CaseReducer<MemoType[], PayloadAction<{id:string, favorite:boolean}>> = (state, action) => {\n  const {id, favorite} = action.payload ;\n  const targetMemoIndex = state.findIndex((memo) => memo.id === id) ;\n  if(targetMemoIndex === -1){\n    return state\n    }\n  \n  state[targetMemoIndex].favorite = favorite;\n  updateStorage(state);\n  return state;\n  }\n\n// Slice„ÇíÁîüÊàê„Åô„Çã\nconst slice = createSlice({\n  name: \"memoList\",\n  initialState,\n  reducers: {\n    addMemo:add,\n    \n    deleteMemo:remove,\n    // etc...\n\n    favoriteMemo:favorite\n  }\n});\n\n// Reducer„Çí„Ç®„ÇØ„Çπ„Éù„Éº„Éà„Åô„Çã\nexport default slice.reducer;\n\n// Action Creators„Çí„Ç®„ÇØ„Çπ„Éù„Éº„Éà„Åô„Çã\nexport const {addMemo, deleteMemo, favoriteMemo} = slice.actions;","import React from 'react';\nimport {MemoType} from '../type/Memo'\nimport Category from './Category'\nimport DeleteButton from './DeleteButton';\nimport FavoriteButton from './Favorite';\nimport { useDispatch } from 'react-redux';\nimport { addMemo, deleteMemo, favoriteMemo} from '../stores/memoList';\n\n\nfunction Memo(props:{memo:MemoType}) {\n  const {text,category,favorite,created_dt,id} =props.memo\n  const dispatch = useDispatch();\n  const date = `${created_dt.getFullYear()} / ${created_dt.getMonth()+1} / ${created_dt.getDate()} / ${created_dt.getHours()} : ${created_dt.getMinutes()}`\n  const Delete = () =>{\n    console.log('delete')\n  }\n  const Favorite = () =>{\n    dispatch(favoriteMemo({id, favorite:!favorite}))\n  } \n  \n  \n\n  return (\n    <div className='Memo'>\n      <div className='header'>\n        <div><Category category={category} /></div>\n        <div className='favorite-button'>\n          <FavoriteButton Favorite={Favorite} isFavorite={favorite}/>\n        </div>\n        <div>\n        <DeleteButton Delete={(Delete) => dispatch(deleteMemo(id))} />\n        </div>\n        </div>\n      <p>{text}</p>\n      <div className='date'>{date}</div>\n    </div>\n    );\n}\n\nexport default Memo;\n","import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useSelector as rawUseSelector, } from \"react-redux\";\n\n// „Åù„Çå„Åû„Çå slice.reducer „Çí default export „Åó„Å¶„ÅÑ„ÇãÂâçÊèê\nimport MemoListReducer from \"./memoList\";\n\n\nconst reducer = combineReducers({\n memoList :MemoListReducer,\n});\n\nconst store = configureStore({ reducer });\n\nexport default store;\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector;\nexport type RootState = ReturnType<typeof store.getState>;","import { useSelector } from '../stores/index'\n\n\nfunction useSortedMemoList(){\n  const MemoList = useSelector(state => state.memoList);\n  const MemoSort = MemoList.slice();\n  MemoSort.sort(function(a, b) {\n    if (a.created_dt < b.created_dt) {\n      return 1;\n    } else {\n      return -1;\n    }\n  })\n  const FavoriteMemoList = MemoSort.filter(function( item ){\n    return item.favorite === true\n  });\n  const NoFavoriteMemoList = MemoSort.filter(function( item ){\n    return item.favorite === false\n  })\n  return [...FavoriteMemoList, ...NoFavoriteMemoList];\n      \n};\n\nexport default useSortedMemoList;","import React from 'react';\nimport Memo from './Memo';\nimport {MemoType} from '../type/Memo';\nimport { useSelector } from '../stores/index'\nimport useSortedMemoList from '../hooks/useSortedMemoList';\n\nfunction Main() {\n  const MemoList = useSortedMemoList();\n\n  \n  console.log(MemoList)\n  return (\n   <div className='Main'>\n    {\n      MemoList.map((memo)=><Memo memo={memo} key={memo.id} />)\n    }\n   </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\n\n\nfunction AddButton (props:{Add:React.MouseEventHandler<HTMLButtonElement>}) {\n  const Add = props.Add\n  return (\n    <button className='AddButton' onClick={Add}>\n      +\n    </button>\n    );\n}\n\nexport default AddButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addMemo, deleteMemo } from '../stores/memoList';\nimport { MemoType } from '../type/Memo';\nimport { useForm } from \"react-hook-form\";\nimport { Category } from '../type/Category';\n\ntype FormData = {\n  text: string;\n  category: Category;\n  \n}\n\nfunction AddMemoForm (props:{Close:() => void}) {\n  const CategoryList:Category[] = ['job','cooking', 'memo', 'investment', 'other' ]\n  const dispatch = useDispatch();\nconst Close = props.Close\nconst { register, handleSubmit, watch, formState: { errors } } = useForm<FormData>();\nconst Add = (data: FormData) =>{\n  const id:string = getId()\n function getId(){\n  let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let rand_str = '';\n  for ( let i = 0; i < 8; i++ ) {\n    rand_str += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return rand_str\n  }\n  const memo:MemoType={\n    \"created_dt\":new Date(),\n    \"text\":data.text,\n    \"category\":data.category,\n    \"favorite\":true,\n    \"id\": id\n  }\n  console.log('addbutton')\n  dispatch(addMemo(memo))\n  Close();\n  console.log(data);\n}\n  return (\n    <form onSubmit={handleSubmit(Add)}>\n      <textarea {...register(\"text\", { required: true })} />\n      <select {...register('category',{ required: true})}>\n        {CategoryList.map((category,i) => <option key={i} value={category}>{category}</option>)}\n      </select>\n      <button onClick={Close}>\n        close\n      </button>\n      <button>\n        Add\n      </button>\n    </form>\n    );\n}\n\nexport default AddMemoForm;\n","import React, { useState } from 'react';\nimport Modal from \"react-modal\";\nimport Sub from './component/Sub';\nimport Main from './component/Main';\nimport './App.css';\nimport AddButton from './component/AddButton';\nimport { useDispatch } from 'react-redux';\nimport { addMemo, deleteMemo } from './stores/memoList';\nimport { MemoType } from './type/Memo';\nimport AddMemoForm from './component/AddMemoForm';\n\n\nfunction App() {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const Add = () =>{\n    const id:string = getId()\n   function getId(){\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let rand_str = '';\n    for ( let i = 0; i < 8; i++ ) {\n      rand_str += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return rand_str\n    }\n    const memo:MemoType={\n      \"created_dt\":new Date(),\n      \"text\":'unko',\n      \"category\":'cooking',\n      \"favorite\":true,\n      \"id\": id\n    }\n    console.log('addbutton')\n    dispatch(addMemo(memo))\n  }\n  return (\n    <div className=\"App\">\n      <div className='container main' ><Main /></div>\n      <div className='container sub' ><Sub /></div>\n      <div className='add-button'>\n        <AddButton Add={() => setIsOpen(true)} />\n      </div>\n      <Modal isOpen={modalIsOpen}>\n        <AddMemoForm Close={() => setIsOpen(false)} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./stores/\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}